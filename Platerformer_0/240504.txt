유니티 충돌


Rigidbody = 충돌할 두 물체 중 하나만 소유해도 작용
Collider = 반드시 두 물체 전부 다 소유할 때 작용

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

「컴포넌트 기반 스크립트」

- 컴포넌트(Component) : 
소프트웨어 구성 단위(Module)을 미리 만들어 둔 후 기술을 개발할 때 모듈을 조립하여 만드는 기법
ex) 레고처럼 조립하는 것.

- 스크립팅 :
컴퓨터 언어로 코드를 작성해서 객채가 특정 동작을 하도록 작성하는 것

「게임」
- 오브젝트의 현재 위치(Position)
- 화면에 오브젝트 어떻게 보이는가(Randering)
- 물리 법칙이 어떻게 적용되는가 (Physics)
- 입력이 어떻게 적용되는가 (Input)
- 게임 플랫폼이 되는 빌드를 어떻게 하는가 (Build)
- 사운드 이펙트, 비주얼 이펙트, (effect)
- 시네마틱(영상 촬영)을 어떻게 할 것인가 (Cinematic, Recording) 
-> 컴포넌트를 가져와서 조립해서 프로젝트를 생성!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
씬 - 하이아키 - 게임 오브젝트 생성

Hierarchy - 마우스 우클릭 - Create Empty Object
컴포넌트를 담을 수 있는 기반이 되는 오브젝트 생성

게임 엔진마다 오브젝트 구성, 컴포넌트 설정이 다름

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

나만의 특정한 컴포넌트는? c#, c++로 확장

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

이벤트 함수 : 유니티 게임에서 개발자의 편의를 위해 미리 만들어둔 함수

유니티의 이벤트 함수는 사전에 정의된 순서가 있음

이벤트 함수의 실행 순서가 유니티 라이프 사이클.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Monobehaviour 클래스

Scrpit에 있는 변수를 컴포넌트로 사용할 수 있게 해줌

유니티 이벤트 함수를 사용하기 위해 선언

사용자 정의 함수를 추가해서 커스텀할 수 있음

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

실제 작동 방식브로드캐스팅 시스템()

하이아라키에 있는 모든 오브젝트 검사 → 

→ Monobehaviour를 가지고 있나? → 가지고 있으면 어떤 이벤트 함수를 가지나? 

→ 가지고 있지 않다면 다음 오브젝트 검사

Start가 실행되는 순서 : 첫번째 이미지 그려지기 전, 하이아라키 창에 있는 모든 오브젝트를 대상으로

Start가 있는지 확인하고 Start가 있다면 그 오브젝트의 Start 함수 실행

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

라이프 사이클 (생성 → 업데이트 → 삭제 및 종료)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

생성 : 데이터 초기화_선언한 변수에 처음으로 데이터 기입

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

업데이트 : 씬의 변경 사항을 화면에 갱신하기 위한 목적

FixedUpdate	: 고정된 시간에 따라 호출하는 함수
Update		: 프레임마다 호출
LastUpdate	: Update 직후에 호출되는 함수 

이용예제

FixedUpdate	: 물리적 계산을 해야할 때 통일된 단위를 제공하기 위해서 함수를 제공
		Rigidbody 물리 컴포넌트의 계산을 실행할 때 FixedUpdate에서 코드 작성 시 성능 향상 가능

Update		: 게임 로직을 작성


LastUpdate	: 플레이어의 입력을 받아서 처리하는 기능(인풋) 
		Update 플레이의 움직임 코드 작성. 카메라가 움직이는 코드.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

입력 이벤트, 게임 로직, Rendering

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

삭제 및 종료

On Destroy	: 오브젝트가 파괴되었을 때 호출 함수 -> 조건
On Disable	: 오브젝트가 비활성화되었을 때 호출 함수 - 조건
On ApplicationQuit : 오브젝트가 종료될 때 호출 함수 -> 게임이 종료 시 자동저장 등

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Collision vs Trigger

God 팔레트로 작성을 했는데 배경이라면 물리적 충돌 없이 그냥 이동할 수 있다.

Terrain 물리적인 충돌이 가능하다 -> Collider
플레이어가 Rigidbody Collder를 가지고 있기 때문에 물리적인 충돌이 발생

-> Collision. 실제 물리 충돌에 의해서 접촉이 발생했을 때 호출됨.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Void OnCollisionEnter()
Collision으로 충돌했을 때










